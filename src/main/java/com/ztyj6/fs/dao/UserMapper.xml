<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ztyj6.fs.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.ztyj6.fs.model.User">
		<id column="Id" property="id" jdbcType="INTEGER" />
		<id column="ParentId" property="parentId" jdbcType="INTEGER" />
		<id column="BalanceId" property="balanceId" jdbcType="INTEGER" />
		<result column="UserName" property="username" jdbcType="VARCHAR" />
		<result column="Password" property="password" jdbcType="VARCHAR" />
		<result column="RealName" property="realname" jdbcType="VARCHAR" />
		<result column="Phone" property="phone" jdbcType="VARCHAR" />
		<result column="Email" property="email" jdbcType="VARCHAR" />
		<result column="LastLoginDate" property="lastLoginDate"
			jdbcType="TIMESTAMP" />
		<result column="LastLoginIp" property="lastLoginIp" jdbcType="VARCHAR" />
		<result column="CreateIp" property="createIp" jdbcType="VARCHAR" />
		<result column="CreateDate" property="createDate" jdbcType="TIMESTAMP" />
		<result column="IsEnable" property="isEnable" jdbcType="BIT" />
	</resultMap>
	<sql id="Base_Column_List">
		Id, ParentId, BalanceId, UserName, Password, RealName,
		Phone, Email,
		LastLoginDate,
		LastLoginIp, CreateIp, CreateDate, IsEnable
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="com.ztyj6.fs.model.User">
		select
		<include refid="Base_Column_List" />
		from User
		where Id = #{id,jdbcType=INTEGER}
	</select>
	
	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from User
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="com.ztyj6.fs.model.User">
		delete from User
		where Id = #{id,jdbcType=INTEGER}

	</delete>
	<delete id="deleteByRoleIdNotIn">
		delete from R_User_Role
		where UserId = #{userId} and RoleId not in
		<foreach collection="ids" item="String" open="(" separator=","
			close=")">
			#{String}
		</foreach>
	</delete>

	<insert id="insertUserRole">
		insert ignore into R_User_Role (UserId,RoleId) values
		<foreach collection="ids" item="String" open="(" separator="),("
			close=")">
			#{userId} , #{String}
		</foreach>
	</insert>

	<insert id="insert" parameterType="com.ztyj6.fs.model.User">
		insert into User (Id,
		ParentId, BalanceId,
		UserName, Password, RealName,
		Phone, Email,
		LastLoginDate,
		LastLoginIp, CreateIp, CreateDate,
		IsEnable)
		values
		(#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER},
		#{balanceId,jdbcType=INTEGER},
		#{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
		#{lastLoginDate,jdbcType=TIMESTAMP},
		#{lastLoginIp,jdbcType=VARCHAR},
		#{createIp,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
		#{isEnable,jdbcType=BIT})
	</insert>

	<insert id="insertSelective" parameterType="com.ztyj6.fs.model.User">
		insert into User
		<trim prefix="(" suffix=")" suffixOverrides=",">
			UserName,
			Password,
			<if test="parentId != null">
				ParentId,
			</if>
			<if test="balanceId != null">
				BalanceId,
			</if>
			<if test="realname != null">
				RealName,
			</if>
			<if test="phone != null">
				Phone,
			</if>
			<if test="email != null">
				Email,
			</if>
			<if test="lastLoginDate != null">
				LastLoginDate,
			</if>
			<if test="lastLoginIp != null">
				LastLoginIp,
			</if>
			<if test="createIp != null">
				CreateIp,
			</if>
			<if test="createDate != null">
				CreateDate,
			</if>
			<if test="isEnable != null">
				IsEnable,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{username,jdbcType=VARCHAR},
			#{password,jdbcType=VARCHAR},
			<if test="parentId != null">
				#{parentId,jdbcType=INTEGER},
			</if>
			<if test="balanceId != null">
				#{balanceId,jdbcType=INTEGER},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginDate != null">
				#{lastLoginDate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginIp != null">
				#{lastLoginIp,jdbcType=VARCHAR},
			</if>
			<if test="createIp != null">
				#{createIp,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="isEnable != null">
				#{isEnable,jdbcType=BIT},
			</if>
		</trim>
		<!-- mysql 查询最后插入的id -->
		<selectKey resultType="java.lang.Integer" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.ztyj6.fs.model.User">
		update User
		<set>
			<if test="parentId != null">
				ParentId = #{parentId,jdbcType=INTEGER},
			</if>
			<if test="balanceId != null">
				BalanceId = #{balanceId,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				UserName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				Password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				RealName = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				Phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				Email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginDate != null">
				LastLoginDate = #{lastLoginDate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginIp != null">
				LastLoginIp = #{lastLoginIp,jdbcType=VARCHAR},
			</if>
			<if test="createIp != null">
				CreateIp = #{createIp,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				CreateDate = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="isEnable != null">
				IsEnable = #{isEnable,jdbcType=BIT},
			</if>
		</set>
		where Id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.ztyj6.fs.model.User">
		update User
		set
		UserName = #{username,jdbcType=VARCHAR},
		Password =
		#{password,jdbcType=VARCHAR},
		RealName = #{realname,jdbcType=VARCHAR},
		Phone = #{phone,jdbcType=VARCHAR},
		Email = #{email,jdbcType=VARCHAR},
		LastLoginDate = #{lastLoginDate,jdbcType=TIMESTAMP},
		LastLoginIp =
		#{lastLoginIp,jdbcType=VARCHAR},
		CreateIp =
		#{createIp,jdbcType=VARCHAR},
		CreateDate =
		#{createDate,jdbcType=TIMESTAMP},
		IsEnable = #{isEnable,jdbcType=BIT}
		ParentId = #{parentId,jdbcType=INTEGER}
		BalanceId =
		#{balanceId,jdbcType=INTEGER}
		where Id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateStateByPrimaryKey">
		update User
		set
		LastLoginDate =
		#{param.lastLoginDate},
		LastLoginIP =
		#{param.lastLoginIp}
		where
		Id = #{id}
	</update>

	<resultMap id="ExtendResultMap1" type="com.ztyj6.fs.model.User"
		extends="BaseResultMap">
		<collection property="balance" javaType="list" ofType="com.ztyj6.fs.model.Balance">
			<id property="id" column="balance_id" />
			<result column="Available" property="available" />
			<result column="Frozen" property="frozen" />
		</collection>
	</resultMap>
	<select id="selectByFilter" resultMap="ExtendResultMap1">
		SELECT
		`User`.Id,
		`User`.UserName,
		`User`.`Password`,
		`User`.RealName,
		`User`.Phone,
		`User`.Email,
		`User`.LastLoginDate,
		`User`.LastLoginIp,
		`User`.CreateIp,
		`User`.CreateDate,
		`User`.IsEnable,
		`User`.ParentId,
		`User`.BalanceId,
		Balance.Id balance_id,
		Balance.Available,
		Balance.Frozen
		FROM
		`User`
		INNER JOIN Balance ON `User`.BalanceId = Balance.Id
		<where>
			<if test="pageFilter.keyword != null">
				User.UserName like #{pageFilter.keyword,jdbcType=VARCHAR}
				or User.RealName like #{pageFilter.keyword,jdbcType=VARCHAR}
			</if>
			<if test="pageFilter.startTime != null and pageFilter.endTime != null">
				and Create_Time between
				#{pageFilter.startTime,jdbcType=TIMESTAMP} and
				#{pageFilter.endTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
		<resultMap id="Balance" type="com.ztyj6.fs.model.Balance" >
			<id property="id" jdbcType="INTEGER" column="Balance_id"/>
			<result property="available" jdbcType="DECIMAL" column="Balance_available"/>
			<result property="frozen" jdbcType="DECIMAL" column="Balance_frozen"/>
	</resultMap>
		<select id="selectBalanceById"  parameterType="java.lang.Integer" resultMap="Balance">
		SELECT
		`User`.Id,
		`User`.UserName,
		`User`.`Password`,
		`User`.RealName,
		`User`.Phone,
		`User`.Email,
		`User`.LastLoginDate,
		`User`.LastLoginIp,
		`User`.CreateIp,
		`User`.CreateDate,
		`User`.IsEnable,
		`User`.ParentId,
		`User`.BalanceId,
		Balance.Id Balance_id,
		Balance.Available Balance_available,
		Balance.Frozen Balance_frozen
		FROM
		`User`
		INNER JOIN Balance ON `User`.BalanceId = Balance.Id
		<where>
				User.Id = #{id,jdbcType=VARCHAR}
		</where>
	</select>
		<select id="selectbalanceById" resultMap="ExtendResultMap1">
		SELECT
		`User`.Id,
		`User`.UserName,
		`User`.`Password`,
		`User`.RealName,
		`User`.Phone,
		`User`.Email,
		`User`.LastLoginDate,
		`User`.LastLoginIp,
		`User`.CreateIp,
		`User`.CreateDate,
		`User`.IsEnable,
		`User`.ParentId,
		`User`.BalanceId,
		Balance.Id User_id,
		Balance.Available Balance_available,
		Balance.Frozen Balance_frozen
		FROM
		`User`
		INNER JOIN Balance ON `User`.BalanceId = Balance.Id
		<where>
				User.Id = #{id,jdbcType=VARCHAR}
		</where>
	</select>
	
	<select id="selectByIdFilter"  resultMap="ExtendResultMap1">
		SELECT
		`User`.Id,
		`User`.UserName,
		`User`.`Password`,
		`User`.RealName,
		`User`.Phone,
		`User`.Email,
		`User`.LastLoginDate,
		`User`.LastLoginIp,
		`User`.CreateIp,
		`User`.CreateDate,
		`User`.IsEnable,
		`User`.ParentId,
		`User`.BalanceId,
		Balance.Id balance_id,
		Balance.Available,
		Balance.Frozen
		FROM
		`User`
		INNER JOIN Balance ON `User`.BalanceId = Balance.Id
		WHERE `User`.Id= #{id,jdbcType=INTEGER}
			<where>
			<if test="pageFilter.keyword != null">
				User.UserName like #{pageFilter.keyword,jdbcType=VARCHAR}
				or User.RealName like #{pageFilter.keyword,jdbcType=VARCHAR}
			</if>
			<if test="pageFilter.startTime != null and pageFilter.endTime != null">
				and Create_Time between
				#{pageFilter.startTime,jdbcType=TIMESTAMP} and
				#{pageFilter.endTime,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
	<insert id="insertRole">
		insert into R_User_Role
		(UserId,RoleId)
		value
		(#{userId} , #{roleId})
	</insert>

	<select id="countByUsername" parameterType="java.lang.String"
		resultType="int">
		select
		count(*) c
		from User where UserName =
		#{username,jdbcType=VARCHAR}
	</select>


	<resultMap id="ExtendResultMap2" type="com.ztyj6.fs.model.User"
		extends="BaseResultMap">
		<collection property="roles" javaType="list"
			ofType="com.ztyj6.fs.model.Role">
			<id column="role_Id" property="id" />
			<result column="role_Name" property="name" />
			<result column="role_Code" property="code" />
			<result column="role_Description" property="description" />
			<result column="role_CreateUserId" property="createUserId" />
			<result column="role_CreateDate" property="createDate" />
			<result column="role_ModifyUserId" property="modifyUserId" />
			<result column="role_ModifyDate" property="modifyDate" />
		</collection>
	</resultMap>

	<select id="selectByUsername" resultMap="ExtendResultMap2">
		SELECT
		`User`.Id,
		`User`.UserName,
		`User`.`Password`,
		`User`.RealName,
		`User`.Phone,
		`User`.Email,
		`User`.LastLoginDate,
		`User`.LastLoginIp,
		`User`.CreateIp,
		`User`.CreateDate,
		`User`.IsEnable,
		`User`.ParentId,
		`User`.BalanceId,
		R_User_Role.Id,
		R_User_Role.UserId,
		R_User_Role.RoleId,
		Role.Id role_Id,
		Role.`Name` role_Name,
		Role.`Code` role_Code,
		Role.Description
		Role_Description,
		Role.CreateUserId role_CreateUserId,
		Role.CreateDate
		Role_CreateDate,
		Role.ModifyUserId role_ModifyUserId,
		Role.ModifyDate
		Role_ModifyDate,
		Role.IsEnable
		FROM
		`User`
		INNER JOIN R_User_Role ON
		R_User_Role.UserId = `User`.Id
		INNER JOIN Role ON R_User_Role.RoleId =
		Role.Id
		where User.UserName =#{username}
	</select>
	<delete id="delete" parameterType="java.util.List">
		delete from User where Id in
		<foreach collection="list" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>
</mapper>